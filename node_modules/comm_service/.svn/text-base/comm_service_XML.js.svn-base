
/**
 * @function service_XML.send
 *
 * ###service_XML.send
 * Respond with the given data in XML format. Calls objectToXML to do this.
 *
 * @param {object} req
 *      An HTTP request object
 * @param {object} res
 * 		An HTTP response object
 * @param {string} data
 * 		A String
 * @return {nil}
 */

exports.send = function (req, res, data) {

    res.header('Content-type', 'text/xml');
    
    
    var response = '<?xml version=\"1.0\"?>\n';

    response = response + objectToXML('response', data);
    
    
    res.send(response);
    
}


/**
 * @function service_XML.objectToXML
 *
 * ###service_XML.objectToXML
 * Respond with the given data in XML format.
 *
 * @param {string} rootName
 * 		A String
 * @param {string} data
 * 		A String
 * @return {string} response
 */
var objectToXML = function (rootName, data) {


    var response = '<'+rootName+'>\n';

    for( var di in data) {
    
        if (Object.prototype.toString.call(data[di]) == "[object Array]") {
        
            response += '<'+di+'>' + "\n";
            
            for (var indx=0; indx<data[di].length; indx++) {
            
                response += objectToXML( di+'.'+indx, data[di][indx]) + "\n";
            
            }
            
            response += '</'+di+'>' + "\n";
            
        } else if (typeof data[di] == 'object') {

            response += objectToXML( di, data[di] ) + "\n";
            
        } else {
        
            response += '<'+di+'>' + data[di] + '</'+di+">\n";
            
        }
    }

    response = response + '</'+rootName+'>';
    return response;

}

