c({"name": "Command.prototype.password", "params": {"str": {"description": "", "type": "String", "optional": false, "order": 0, "name": "str"}, "mask": {"description": "", "type": "String", "optional": false, "order": 1, "name": "mask"}, "fn": {"description": "", "type": "Function", "optional": false, "order": 2, "name": "fn"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Prompt for password with <code>str</code>, <code>mask</code> char and callback <code>fn(val)</code>.</p>\n\n<p>The mask string defaults to '', aka no output is\nwritten while typing, you may want to use \"*\" etc.</p>\n\n<p>Examples:</p>\n\n<pre><code>program.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n</code></pre>\n\n<p>@api public</p>", "src": "appDev/node_modules/socket.io/node_modules/socket.io-client/node_modules/ws/node_modules/commander/lib/commander.js", "line": 809, "children": []})