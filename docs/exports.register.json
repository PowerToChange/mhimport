c({"name": "exports.register", "params": {"ext": {"description": "", "type": "String", "optional": false, "order": 0, "name": "ext"}, "exports": {"description": "", "type": "", "optional": false, "order": 1, "name": "exports"}, "obj": {"order": 2, "description": "", "name": "obj", "type": "Object", "optional": false}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Register the given template engine <code>exports</code>\nas <code>ext</code>. For example we may wish to map \".html\"\nfiles to jade:</p>\n\n<p>app.register('.html', require('jade'));</p>\n\n<p>or</p>\n\n<p>app.register('html', require('jade'));</p>\n\n<p>This is also useful for libraries that may not\nmatch extensions correctly. For example my haml.js\nlibrary is installed from npm as \"hamljs\" so instead\nof layout.hamljs, we can register the engine as \".haml\":</p>\n\n<p>app.register('.haml', require('haml-js'));</p>\n\n<p>@api public</p>", "src": "appDev/node_modules/express/lib/view/view.js", "line": 183, "children": []})