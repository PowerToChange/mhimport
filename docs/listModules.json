c({"name": "listModules", "type": "attribute", "comment": "<p>', function(req, res) { \n    log(req,'   - App.js: catching scripts/modules/ reference and returning file.');\n    loadFileDirect(req, res, 'modules');\n});</p>\n\n<p>// for all /page/  requests, make sure we do our pageStack:\nvar pageStack = [\n        AD.Defaults.setup,         // setup our data structures in req object\n        AD.Auth.preAuthentication,\n        AD.Auth.authenticatePage,  // make sure viewer is authenticated\n        AD.Auth.switcheroo,     // allow viewer to impersonate another (developers)\n        AD.Lang.loadLanguages   // any multilingual feature needs this\n        ];</p>\n\n<p>// for all /service/ or /query/ requests, make sure we do our serviceStack:\nvar serviceStack = [\n        AD.Defaults.setup, \n        AD.Auth.preAuthentication,\n        AD.Auth.authenticateService, \n        AD.Auth.switcheroo,\n        AD.Lang.loadLanguages   // any multilingual feature needs this\n        ];</p>\n\n<p>app.all('/*',  function (req, res, next) {</p>\n\n<pre><code>log(req,' ');\nlog(req,' ');\nlog(req,'new request['+req.originalUrl+']');\n\nnext();\n</code></pre>\n\n<p>});</p>\n\n<p>// page:     any request that is attempting to load a full page.  These \n//           requests need to redirect to the login page if the user's \n//           authentication is not valid.\napp.all('/page/<em>', pageStack, function(req, res, next) { log(req,'   - progressing through pageStack! /page/</em>'); next(); });</p>\n\n<p>// service:  usually any of our ajax based requests will start with /\n//           service/<em>.  These calls need to be able to conform to our \n//           message formats that respond with success:true|false\napp.all('/service/</em>', serviceStack, function (req, res, next) { log(req,'   - progressing through serviceStack! /service/* '); next(); });</p>\n\n<p>app.all('/query/<em>', serviceStack, function (req, res, next) { log(req,'   - progressing through serviceStack! /query/</em> '); next(); });</p>\n\n<p>// init:    this is a special request for the javascript initialization data\n//          (used by steal) to load all the javascripts for a page.  These\n//          routes are defined by the node_[interface].js files.\napp.all('/init/<em>', serviceStack, function (req, res, next) { log(req,'   - progressing through serviceStack! /init/</em> '); next(); });</p>\n\n<p>// labels:    these requests are for labels from a given path\napp.all('/labels/<em>', serviceStack, function (req, res, next) { log(req,'   - progressing through serviceStack! /labels/</em>'); next(); });</p>\n\n<p>// Set up any additional routes needed by the site authentication handler\nif (AD.Auth.routes) {\n    for (var routePath in AD.Auth.routes) {\n        var routeHandler = AD.Auth.routes[routePath];\n        app.all(routePath, routeHandler);\n    }\n}</p>\n\n<p>// Lower level database interface for use within this local scope\nvar db = require('database.js').sharedDB();</p>\n\n<p>/**</p>\n\n<p>Global variable that keeps track of all modules currently active within\n appDev. The object keys here should be all lowercase.</p>", "src": "appDev/app.js", "line": 84, "children": []})