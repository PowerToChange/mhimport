c({"name": "AD.Comm.Notification.subscribe", "type": "function", "comment": "<p>Then the widget that allowed you to create a new show would then publish\n a notification after the show has been created:</p>\n\n<pre><code class='javascript'>     AD.Comm.Notification.publish('TVShow.Added', { name:'Hawaii-5-O' });</code></pre>Register an event handler for a given event.  \n\n<pre><code class='javascript'>var responder = function( event, data ) {\n  console.log(' received event['+event+']');\n  AD.Comm.Notification.unsubscribe(key);\n}\nvar key = AD.Comm.Notification.subscribe('site.*', responder);</code></pre>", "parents": ["AD.Comm.Notification"], "src": "appDev/node_modules/comm_notification.js", "line": 163, "params": {"event": {"description": "<p>the event name </p>", "type": "String", "optional": false, "order": 0, "name": "event"}, "callback": {"description": "<p>the handler for this event.</p>", "type": "Function", "optional": false, "order": 1, "name": "callback"}, "scope": {"description": "", "type": "", "optional": false, "order": 2, "name": "scope"}, "subscriberData": {"description": "", "type": "", "optional": false, "order": 3, "name": "subscriberData"}, "filter": {"description": "", "type": "", "optional": false, "order": 4, "name": "filter"}}, "ret": {"description": "<p>a unique subscription Key for this hub</p>", "type": "String"}, "children": []})