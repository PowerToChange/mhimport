c({"name": "doc", "type": "page", "comment": "<h1>mimelib(1) -- MIME functions for Node.JS</h1>\n\n<h2>DESCRIPTION</h2>\n\n<p>This document lists all the available methods for mimelib. You can include mimelib\nin your projects with <code>var mimelib = require(\"mimelib\");</code></p>\n\n<p>When installed with npm dependency module iconv will also be installed if not already\npresent.</p>\n\n<h2>contentTypes</h2>\n\n<p><code>mimelib.contentTypes</code> is an object to provide content type strings for common\nfile extensions</p>\n\n<pre><code>mimelib.contentTypes[\"xls\"]; // \"application/vnd.ms-excel\"\n</code></pre>\n\n<h2>foldLine</h2>\n\n<p>Folds a long line according to the RFC 5322 <a href=\"http://tools.ietf.org/html/rfc5322#section-2.1.1\">http://tools.ietf.org/html/rfc5322#section-2.1.1</a></p>\n\n<pre><code>mimelib.foldLine(str [, maxLength][, foldAnywhere]) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): mime string that might need folding</li>\n<li><code>maxLength</code> (Number): max length for a line, defaults to 78</li>\n<li><code>foldAnywhere</code> (Boolean): can fold at any location (ie. in base64)</li>\n<li><code>afterSpace</code> (Boolean): If <code>true</code> fold after the space</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>Content-Type: multipart/alternative; boundary=\"----zzzz----\"\n</code></pre>\n\n<p>will become</p>\n\n<pre><code>Content-Type: multipart/alternative;\n     boundary=\"----zzzz----\"\n</code></pre>\n\n<h2>encodeMimeWord</h2>\n\n<p>Encodes a string into mime encoded word format <a href=\"http://en.wikipedia.org/wiki/MIME#Encoded-Word\">http://en.wikipedia.org/wiki/MIME#Encoded-Word</a>  (see also <code>decodeMimeWord</code>)</p>\n\n<pre><code>mimelib.encodeMimeWord = function(str [, encoding][, charset])\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be encoded</li>\n<li><code>encoding</code> (String): Encoding Q for quoted printable or B (def.) for base64</li>\n<li><code>charset</code> (String): Charset to be used</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>See on õhin test\n</code></pre>\n\n<p>Becomes with UTF-8 and Quoted-printable encoding</p>\n\n<pre><code>=?UTF-8?q?See_on_=C3=B5hin_test?=\n</code></pre>\n\n<h2>decodeMimeWord</h2>\n\n<p>Decodes a string from mime encoded word format (see also <code>encodeMimeWord</code>)</p>\n\n<pre><code>mimelib.decodeMimeWord(str) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be decoded</li>\n</ul>\n\n<p>For example</p>\n\n<pre><code>mimelib.decodeMimeWord(\"=?UTF-8?q?See_on_=C3=B5hin_test?=\");\n</code></pre>\n\n<p>will become</p>\n\n<pre><code>See on õhin test\n</code></pre>\n\n<h2>encodeQuotedPrintable</h2>\n\n<p>Encodes a string into Quoted-printable format (see also <code>decodeQuotedPrintable</code>)</p>\n\n<pre><code>mimelib.encodeQuotedPrintable(str [, mimeWord][, charset]) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be encoded into Quoted-printable</li>\n<li><code>mimeWord</code> (Boolean): Use mime-word mode (defaults to false)</li>\n<li><code>charset</code> (String): Destination charset, defaults to UTF-8</li>\n</ul>\n\n<p>TODO: Currently only allowed charsets: UTF-8, LATIN1</p>\n\n<h2>decodeQuotedPrintable</h2>\n\n<p>Decodes a string from Quoted-printable format  (see also <code>encodeQuotedPrintable</code>)</p>\n\n<pre><code>mimelib.deccodeQuotedPrintable(str [, mimeWord][, charset]) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be decoded</li>\n<li><code>mimeWord</code> (Boolean): Use mime-word mode (defaults to false)</li>\n<li><code>charset</code> (String): Charset to be used, defaults to UTF-8</li>\n</ul>\n\n<h2>encodeBase64</h2>\n\n<p>Encodes a string into Base64 format. Base64 is mime-word safe (see also <code>decodeBase64</code>)</p>\n\n<pre><code>mimelib.encodeBase64(str [, charset]) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be encoded into Base64</li>\n<li><code>charset</code> (String): Destination charset, defaults to UTF-8</li>\n</ul>\n\n<h2>decodeBase64</h2>\n\n<p>Decodes a string from Base64 format. Base64 is mime-word safe (see also <code>encodeBase64</code>)</p>\n\n<p>NB! Always returns UTF-8</p>\n\n<pre><code>mimelib.decodeBase64(str) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): String to be decoded from Base64</li>\n<li><code>charset</code> (String): Source charset, defaults to UTF-8</li>\n</ul>\n\n<h2>parseHeaders</h2>\n\n<p>Parses header lines into an array of objects (see <code>parseHeaderLine</code>)</p>\n\n<pre><code>mimelib.parseHeaders(headers) -&gt; Array\n</code></pre>\n\n<ul>\n<li><code>headers</code> (String): header section of the e-mail</li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>var headers = [\n    \"From: andris@node.ee\",\n    \"To: juulius@node.ee\",\n    \"To: juulius2@node.ee\",\n    \"Content-type: text/html;\",\n    \"    charset=utf-8\"\n    ].join(\"\\r\\n\");\nmimelib.parseHeaders(headers);\n</code></pre>\n\n<p>Results in </p>\n\n<pre><code>{\"from\": [ 'andris@node.ee' ],\n \"to\": [ 'juulius@node.ee', 'juulius2@node.ee' ],\n \"content-type\": [ 'text/html;    charset=utf-8' ] }\n</code></pre>\n\n<h2>parseAddresses</h2>\n\n<p>Parses names and addresses from a from, to, cc or bcc line</p>\n\n<pre><code>mimelib.parseAddresses(addresses) -&gt; Array\n</code></pre>\n\n<ul>\n<li><code>addresses</code> (String): string with comma separated e-mail addresses  </li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>var to = '\"Andris Reinman\" &lt;andris@node.ee&gt;, juulius@node.ee'\nmimelib.parseAddresses(to);\n</code></pre>\n\n<p>Results in</p>\n\n<pre><code>[{ address: 'andris@node.ee', name: 'Andris Reinman' },\n { address: 'juulius@node.ee', name: false }]\n</code></pre>\n\n<h2>parseMimeWords</h2>\n\n<p>Parses mime-words into UTF-8 strings</p>\n\n<pre><code>mimelib.parseMimeWords(str) -&gt; String\n</code></pre>\n\n<ul>\n<li><code>str</code> (String): string to be parsed, if includes any mime words, then these are converted to UTF-8 strings</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>mimelib.parseMimeWords(\"Hello: =?UTF-8?q?See_on_=C3=B5hin_test?=\");\n</code></pre>\n\n<p>Results in</p>\n\n<pre><code>\"Hello: See on õhin test\"\n</code></pre>\n\n<h2>parseHeaderLine</h2>\n\n<p>Parses a header line to search for additional parameters.</p>\n\n<pre><code>mimelib.parseHeaderLine(line) -&gt; Object\n</code></pre>\n\n<ul>\n<li><code>line</code> (String): a line from a message headers</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>mimelib.parseHeaderLine(\"text/plain; charset=utf-8\")imelib\n</code></pre>\n\n<p>Results in</p>\n\n<pre><code>{\"defaultValue\": 'text/plain',\n \"charset\": 'utf-8' }\n</code></pre>", "src": "appDev/node_modules/mailer/node_modules/nodemailer/node_modules/mimelib-noiconv/doc.md", "children": []})