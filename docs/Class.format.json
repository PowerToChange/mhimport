c({"name": "Class.format", "params": {"amount": {"description": "<p>The amount to format as currency.</p>", "type": "Number|String", "optional": false, "order": 0, "name": "amount"}, "options": {"description": "<p>Options to modify the formatted output:\n      <ul>\n          <li>\"^\"  suppress grouping\n          <li>\"!\"  suppress the currency symbol\n          <li>\"~\"  suppress the currency symbol and the sign (positive or negative)\n          <li>\"i\"  force international sign (ISO-4217 code) formatting\n          <li>\".n\" specify decimal precision</p>", "type": "String", "optional": true, "order": 1, "name": "options"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["Class"], "comment": "<p>@public</p>\n\n<p>locale.</p>\n\n<pre>\nFor local currencies the native shorthand symbol will be used for\nformatting.\nExample:\n       locale is en_US\n       currency is USD\n       -> the \"$\" symbol will be used, e.g. $123.45\n\nFor non-local currencies the international ISO-4217 code will be\nused for formatting.\nExample:\n      locale is en_US (which has USD as currency)\n      currency is EUR\n      -> the ISO three-letter code will be used, e.g. EUR 123.45\n\nIf the currency is non-local, but an alternative currency symbol was\nprovided, this will be used instead.\nExample\n      locale is en_US (which has USD as currency)\n      currency is EUR\n      an alternative symbol is provided - \"€\"\n      -> the alternative symbol will be used, e.g. €123.45\n</pre>\n\n<p>@returns The formatted currency amount as string.\n@throws \"Error: Invalid amount\" on bad amount.</p>", "description": "Formats a monetary amount according to the preset ", "src": "appDev/node_modules/socket.io/node_modules/socket.io-client/node_modules/uglify-js/tmp/uglify-hangs.js", "line": 2116, "children": []})