c({"name": "Hello.World", "type": "tutorial", "comment": "<h3>Creating a Hello World Web Server in node.js</h3>\n\n<p>In this example, we'll create a simple web server which returns &quot;Hello World&quot; upon receiving a HTTP connection;</p>\n\n<ul>\n<li>Enter the following into a new text file;</li>\n</ul>\n\n<pre><code class='javascript'>var http = require('http'); \n   http.createServer(function (req, res) {\n   res.writeHead(200, {'Content-Type': 'text/plain'}); \n   res.end('Hello World\\n'); \n}).listen(1337, \"127.0.0.1\");\nconsole.log('Server running at http://127.0.0.1:1337/');</code></pre>\n\n<ul>\n<li>Save the file as &quot;helloworld.js&quot;</li>\n<li>Run &quot;node helloworld.js&quot; from your command line.</li>\n<li>Connect to &quot;http://localhost:1337&quot; on your browser to see the results.</li>\n</ul>\n\n<h3>Some Important Points</h3>\n\n<ul>\n<li>node uses javascript terminology and syntax on the server side</li>\n<li>When a connection occurs, the callback function inside http.createServer is run. When the function terminates, node doesn't lock a thread or sleep while waiting for the next HTTP connection to occur</li>\n</ul>", "parents": ["Tutorial_node.js"], "src": "appDev/Documentation/nodejs_Tutorial.js", "line": 47, "children": []})