c({"name": "app.param", "params": {"name": {"description": "", "type": "String|Array|Function", "optional": false, "order": 0, "name": "name"}, "fn": {"description": "", "type": "Function", "optional": false, "order": 1, "name": "fn"}}, "ret": {"description": "<p>for chaining</p>", "type": "Server"}, "type": "function", "comment": "<p>Map the given param placeholder <code>name</code>(s) to the given callback(s).</p>\n\n<p>Param mapping is used to provide pre-conditions to routes\nwhich us normalized placeholders. This callback has the same\nsignature as regular middleware, for example below when \":userId\"\nis used this function will be invoked in an attempt to load the user.</p>\n\n<pre><code> app.param('userId', function(req, res, next, id){\n   User.find(id, function(err, user){\n     if (err) {\n       next(err);\n     } else if (user) {\n       req.user = user;\n       next();\n     } else {\n       next(new Error('failed to load user'));\n     }\n   });\n });\n</code></pre>\n\n<p>Passing a single function allows you to map logic\nto the values passed to <code>app.param()</code>, for example\nthis is useful to provide coercion support in a concise manner.</p>\n\n<p>The following example maps regular expressions to param values\nensuring that they match, otherwise passing control to the next\nroute:</p>\n\n<pre><code> app.param(function(name, regexp){\n   if (regexp instanceof RegExp) {\n     return function(req, res, next, val){\n       var captures;\n       if (captures = regexp.exec(String(val))) {\n         req.params[name] = captures;\n         next();\n       } else {\n         next('route');\n       }\n     }\n   }\n });\n</code></pre>\n\n<p>We can now use it as shown below, where \"/commit/:commit\" expects\nthat the value for \":commit\" is at 5 or more digits. The capture\ngroups are then available as <code>req.params.commit</code> as we defined\nin the function above.</p>\n\n<p>app.param('commit', /^\\d{5,}$/);</p>\n\n<p>For more of this useful functionality take a look\nat <a href=\"http://github.com/visionmedia/express-params\">express-params</a>.</p>\n\n<p>@api public</p>", "src": "appDev/node_modules/express/lib/http.js", "line": 312, "children": []})