c({"name": "Command.prototype.prompt", "params": {"str": {"description": "", "type": "String", "optional": false, "order": 0, "name": "str"}, "fn": {"description": "", "type": "Function", "optional": false, "order": 1, "name": "fn"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Prompt <code>str</code> and callback <code>fn(val)</code></p>\n\n<p>Commander supports single-line and multi-line prompts.\nTo issue a single-line prompt simply add white-space\nto the end of <code>str</code>, something like \"name: \", whereas\nfor a multi-line prompt omit this \"description:\".</p>\n\n<p>Examples:</p>\n\n<pre><code>program.prompt('Username: ', function(name){\n  console.log('hi %s', name);\n});\n\nprogram.prompt('Description:', function(desc){\n  console.log('description was \"%s\"', desc.trim());\n});\n</code></pre>\n\n<p>@api public</p>", "src": "appDev/node_modules/socket.io/node_modules/socket.io-client/node_modules/ws/node_modules/commander/lib/commander.js", "line": 780, "children": []})