c({"name": "req.is", "params": {"type": {"description": "", "type": "String", "optional": false, "order": 0, "name": "type"}}, "ret": {"description": "", "type": "Boolean"}, "type": "function", "comment": "<p>Check if the incoming request contains the \"Content-Type\" \nheader field, and it contains the give mime <code>type</code>.</p>\n\n<p>Examples:</p>\n\n<pre><code> // With Content-Type: text/html; charset=utf-8\n req.is('html');\n req.is('text/html');\n // =&gt; true\n\n // When Content-Type is application/json\n req.is('json');\n req.is('application/json');\n // =&gt; true\n\n req.is('html');\n // =&gt; false\n</code></pre>\n\n<p>Ad-hoc callbacks can also be registered with Express, to perform\nassertions again the request, for example if we need an expressive\nway to check if our incoming request is an image, we can register \"an image\"\ncallback:</p>\n\n<pre><code>  app.is('an image', function(req){\n    return 0 == req.headers['content-type'].indexOf('image');\n  });\n</code></pre>\n\n<p>Now within our route callbacks, we can use to to assert content types\n such as \"image/jpeg\", \"image/png\", etc.</p>\n\n<pre><code> app.post('/image/upload', function(req, res, next){\n   if (req.is('an image')) {\n     // do something\n   } else {\n     next();\n   }\n });\n</code></pre>\n\n<p>@api public</p>", "src": "appDev/node_modules/express/lib/request.js", "line": 247, "children": []})