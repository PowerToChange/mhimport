c({"name": "req.param", "params": {"name": {"description": "", "type": "String", "optional": false, "order": 0, "name": "name"}, "defaultValue": {"description": "", "type": "Mixed", "optional": false, "order": 1, "name": "defaultValue"}}, "ret": {"description": "", "type": "String"}, "type": "function", "comment": "<pre><code>type = type.split('/')[0] + '/*';\nreturn !!~accept.indexOf(type);\n</code></pre>\n\n<p>} else {\n    return false;\n  }\n};</p>\n\n<p>/**\n Return the value of param <code>name</code> when present or <code>defaultValue</code>.</p>\n\n<ul>\n<li>Checks route placeholders, ex: <em>/user/:id</em></li>\n<li>Checks query string params, ex: ?id=12</li>\n<li><p>Checks urlencoded body params, ex: id=12</p>\n\n<p>To utilize urlencoded request bodies, <code>req.body</code>\nshould be an object. This can be done by using\nthe <code>connect.bodyParser</code> middleware.</p>\n\n<p>@api public</p></li>\n</ul>", "src": "appDev/node_modules/express/lib/request.js", "line": 147, "children": []})