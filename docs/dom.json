c({"name": "dom", "type": "attribute", "comment": "<p>// File: events.idl</p>\n\n<h1>ifndef <em>EVENTS</em>IDL_</h1>\n\n<h1>define <em>EVENTS</em>IDL_</h1>\n\n<h1>include \"dom.idl\"</h1>\n\n<h1>include \"views.idl\"</h1>\n\n<h1>pragma prefix \"dom.w3c.org\"</h1>\n\n<p>module events\n{</p>\n\n<p>typedef dom::DOMString DOMString;\n  typedef dom::DOMTimeStamp DOMTimeStamp;\n  typedef dom::DOMObject DOMObject;\n  typedef dom::Node Node;</p>\n\n<p>interface EventTarget;\n  interface EventListener;</p>\n\n<p>// Introduced in DOM Level 2:\n  exception EventException {\n    unsigned short   code;\n  };\n  // EventExceptionCode\n  const unsigned short      UNSPECIFIED<em>EVENT</em>TYPE<em>ERR     = 0;\n  // Introduced in DOM Level 3:\n  const unsigned short      DISPATCH</em>REQUEST_ERR           = 1;</p>\n\n<p>// Introduced in DOM Level 2:\n  interface Event {</p>\n\n<pre><code>// PhaseType\nconst unsigned short      CAPTURING_PHASE                = 1;\nconst unsigned short      AT_TARGET                      = 2;\nconst unsigned short      BUBBLING_PHASE                 = 3;\n\nreadonly attribute DOMString       type;\nreadonly attribute EventTarget     target;\nreadonly attribute EventTarget     currentTarget;\nreadonly attribute unsigned short  eventPhase;\nreadonly attribute boolean         bubbles;\nreadonly attribute boolean         cancelable;\nreadonly attribute DOMTimeStamp    timeStamp;\nvoid               stopPropagation();\nvoid               preventDefault();\nvoid               initEvent(in DOMString eventTypeArg,\n                             in boolean canBubbleArg,\n                             in boolean cancelableArg);\n// Introduced in DOM Level 3:\nreadonly attribute DOMString       namespaceURI;\n// Introduced in DOM Level 3:\nboolean            isCustom();\n// Introduced in DOM Level 3:\nvoid               stopImmediatePropagation();\n// Introduced in DOM Level 3:\nboolean            isDefaultPrevented();\n// Introduced in DOM Level 3:\nvoid               initEventNS(in DOMString namespaceURIArg,\n                               in DOMString eventTypeArg,\n                               in boolean canBubbleArg,\n                               in boolean cancelableArg);\n</code></pre>\n\n<p>};</p>\n\n<p>// Introduced in DOM Level 2:\n  interface EventTarget {\n    void               addEventListener(in DOMString type,\n                                        in EventListener listener,\n                                        in boolean useCapture);\n    void               removeEventListener(in DOMString type,\n                                           in EventListener listener,\n                                           in boolean useCapture);\n    // Modified in DOM Level 3:\n    boolean            dispatchEvent(in Event evt)\n                                        raises(EventException);\n    // Introduced in DOM Level 3:\n    void               addEventListenerNS(in DOMString namespaceURI,\n                                          in DOMString type,\n                                          in EventListener listener,\n                                          in boolean useCapture,\n                                          in DOMObject evtGroup);\n    // Introduced in DOM Level 3:\n    void               removeEventListenerNS(in DOMString namespaceURI,\n                                             in DOMString type,\n                                             in EventListener listener,\n                                             in boolean useCapture);\n    // Introduced in DOM Level 3:\n    boolean            willTriggerNS(in DOMString namespaceURI,\n                                     in DOMString type);\n    // Introduced in DOM Level 3:\n    boolean            hasEventListenerNS(in DOMString namespaceURI,\n                                          in DOMString type);\n  };</p>\n\n<p>// Introduced in DOM Level 2:\n  interface EventListener {\n    void               handleEvent(in Event evt);\n  };</p>\n\n<p>// Introduced in DOM Level 2:\n  interface DocumentEvent {\n    Event              createEvent(in DOMString eventType)\n                                        raises(dom::DOMException);\n    // Introduced in DOM Level 3:\n    boolean            canDispatch(in DOMString namespaceURI,\n                                   in DOMString type);\n  };</p>\n\n<p>// Introduced in DOM Level 3:\n  interface CustomEvent : Event {\n    void               setDispatchState(in EventTarget target,\n                                        in unsigned short phase);\n    boolean            isPropagationStopped();\n    boolean            isImmediatePropagationStopped();\n  };</p>\n\n<p>// Introduced in DOM Level 2:\n  interface UIEvent : Event {\n    readonly attribute views::AbstractView view;\n    readonly attribute long            detail;\n    void               initUIEvent(in DOMString typeArg,\n                                   in boolean canBubbleArg,\n                                   in boolean cancelableArg,\n                                   in views::AbstractView viewArg,\n                                   in long detailArg);\n    // Introduced in DOM Level 3:\n    void               initUIEventNS(in DOMString namespaceURI,\n                                     in DOMString typeArg,\n                                     in boolean canBubbleArg,\n                                     in boolean cancelableArg,\n                                     in views::AbstractView viewArg,\n                                     in long detailArg);\n  };</p>\n\n<p>// Introduced in DOM Level 3:\n  interface TextEvent : UIEvent {\n    readonly attribute DOMString       data;\n    void               initTextEvent(in DOMString typeArg,\n                                     in boolean canBubbleArg,\n                                     in boolean cancelableArg,\n                                     in views::AbstractView viewArg,\n                                     in DOMString dataArg);\n    void               initTextEventNS(in DOMString namespaceURI,\n                                       in DOMString type,\n                                       in boolean canBubbleArg,\n                                       in boolean cancelableArg,\n                                       in views::AbstractView viewArg,\n                                       in DOMString dataArg);\n  };</p>\n\n<p>// Introduced in DOM Level 2:\n  interface MouseEvent : UIEvent {\n    readonly attribute long            screenX;\n    readonly attribute long            screenY;\n    readonly attribute long            clientX;\n    readonly attribute long            clientY;\n    readonly attribute boolean         ctrlKey;\n    readonly attribute boolean         shiftKey;\n    readonly attribute boolean         altKey;\n    readonly attribute boolean         metaKey;\n    readonly attribute unsigned short  button;\n    readonly attribute EventTarget     relatedTarget;\n    void               initMouseEvent(in DOMString typeArg,\n                                      in boolean canBubbleArg,\n                                      in boolean cancelableArg,\n                                      in views::AbstractView viewArg,\n                                      in long detailArg,\n                                      in long screenXArg,\n                                      in long screenYArg,\n                                      in long clientXArg,\n                                      in long clientYArg,\n                                      in boolean ctrlKeyArg,\n                                      in boolean altKeyArg,\n                                      in boolean shiftKeyArg,\n                                      in boolean metaKeyArg,\n                                      in unsigned short buttonArg,\n                                      in EventTarget relatedTargetArg);\n    // Introduced in DOM Level 3:\n    boolean            getModifierState(in DOMString keyIdentifierArg);\n    // Introduced in DOM Level 3:\n    void               initMouseEventNS(in DOMString namespaceURI,\n                                        in DOMString typeArg,\n                                        in boolean canBubbleArg,\n                                        in boolean cancelableArg,\n                                        in views::AbstractView viewArg,\n                                        in long detailArg,\n                                        in long screenXArg,\n                                        in long screenYArg,\n                                        in long clientXArg,\n                                        in long clientYArg,\n                                        in unsigned short buttonArg,\n                                        in EventTarget relatedTargetArg,\n                                        in DOMString modifiersList);\n  };</p>\n\n<p>// Introduced in DOM Level 3:\n  interface KeyboardEvent : UIEvent {</p>\n\n<pre><code>// KeyLocationCode\nconst unsigned long       DOM_KEY_LOCATION_STANDARD      = 0x00;\nconst unsigned long       DOM_KEY_LOCATION_LEFT          = 0x01;\nconst unsigned long       DOM_KEY_LOCATION_RIGHT         = 0x02;\nconst unsigned long       DOM_KEY_LOCATION_NUMPAD        = 0x03;\n\nreadonly attribute DOMString       keyIdentifier;\nreadonly attribute unsigned long   keyLocation;\nreadonly attribute boolean         ctrlKey;\nreadonly attribute boolean         shiftKey;\nreadonly attribute boolean         altKey;\nreadonly attribute boolean         metaKey;\nboolean            getModifierState(in DOMString keyIdentifierArg);\nvoid               initKeyboardEvent(in DOMString typeArg,\n                                     in boolean canBubbleArg,\n                                     in boolean cancelableArg,\n                                     in views::AbstractView viewArg,\n                                     in DOMString keyIdentifierArg,\n                                     in unsigned long keyLocationArg,\n                                     in DOMString modifiersList);\nvoid               initKeyboardEventNS(in DOMString namespaceURI,\n                                       in DOMString typeArg,\n                                       in boolean canBubbleArg,\n                                       in boolean cancelableArg,\n                                       in views::AbstractView viewArg,\n                                       in DOMString keyIdentifierArg,\n                                       in unsigned long keyLocationArg,\n                                       in DOMString modifiersList);\n</code></pre>\n\n<p>};</p>\n\n<p>// Introduced in DOM Level 2:\n  interface MutationEvent : Event {</p>\n\n<pre><code>// attrChangeType\nconst unsigned short      MODIFICATION                   = 1;\nconst unsigned short      ADDITION                       = 2;\nconst unsigned short      REMOVAL                        = 3;\n\nreadonly attribute Node            relatedNode;\nreadonly attribute DOMString       prevValue;\nreadonly attribute DOMString       newValue;\nreadonly attribute DOMString       attrName;\nreadonly attribute unsigned short  attrChange;\nvoid               initMutationEvent(in DOMString typeArg,\n                                     in boolean canBubbleArg,\n                                     in boolean cancelableArg,\n                                     in Node relatedNodeArg,\n                                     in DOMString prevValueArg,\n                                     in DOMString newValueArg,\n                                     in DOMString attrNameArg,\n                                     in unsigned short attrChangeArg);\n// Introduced in DOM Level 3:\nvoid               initMutationEventNS(in DOMString namespaceURI,\n                                       in DOMString typeArg,\n                                       in boolean canBubbleArg,\n                                       in boolean cancelableArg,\n                                       in Node relatedNodeArg,\n                                       in DOMString prevValueArg,\n                                       in DOMString newValueArg,\n                                       in DOMString attrNameArg,\n                                       in unsigned short attrChangeArg);\n</code></pre>\n\n<p>};</p>\n\n<p>// Introduced in DOM Level 3:\n  interface MutationNameEvent : MutationEvent {\n    readonly attribute DOMString       prevNamespaceURI;\n    readonly attribute DOMString       prevNodeName;\n    // Introduced in DOM Level 3:\n    void               initMutationNameEvent(in DOMString typeArg,\n                                             in boolean canBubbleArg,\n                                             in boolean cancelableArg,\n                                             in Node relatedNodeArg,\n                                             in DOMString prevNamespaceURIArg,\n                                             in DOMString prevNodeNameArg);\n    // Introduced in DOM Level 3:\n    void               initMutationNameEventNS(in DOMString namespaceURI,\n                                               in DOMString typeArg,\n                                               in boolean canBubbleArg,\n                                               in boolean cancelableArg,\n                                               in Node relatedNodeArg,\n                                               in DOMString prevNamespaceURIArg,\n                                               in DOMString prevNodeNameArg);\n  };\n};</p>\n\n<h1>endif // <em>EVENTS</em>IDL_</h1>", "src": "appDev/node_modules/jsdom/lib/jsdom/level3/events.js", "line": 5, "children": []})