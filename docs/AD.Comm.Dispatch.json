c({"name": "AD.Comm.Dispatch", "type": "class", "comment": "<p>The Dispatch object provides a publish/subscribe notification system for\ncommunication between the server and the clients and between clients.</p>\n\n<p>For example, when a user logs into the site, a message might be sent to\nthe other clients to notify them of the new user.</p>\n\n<h2>Usage</h2>\n\n<p>To notify the other clients that a user has logged out you would publish a message:</p>\n\n<pre><code class='javascript'>AD.Comm.Dispatch.publish('/userNotifications/logout', {id: 53, name: 'John Doe'});</code></pre>\n\n<p>To respond to the logout, you would to subscribe to the logout channel:</p>\n\n<pre><code class='javascript'>var userLogout = function(user) {\n    alert(user.name+' just logged out.');\n};\nAD.Comm.Dispatch.subscribe('/userNotifications/logout', userLogout);</code></pre>\n\n<p>Now every time a user logs out, the userLogout function is called with the user's information.</p>\n\n<h2>Wildcards</h2>\n\n<p>From the Faye website:</p>\n\n<p>Channel names must be formatted as absolute path names whose segments may contain only letters,\nnumbers, and the symbols -, _, !, ~, (, ), $ and @.  Channel names may also end with wildcards:</p>\n\n<ul>\n<li>The * wildcard matches any channel segment. So /foo/* matches /foo/bar and /foo/thing but not /foo/bar/thing.</li>\n<li>The <em>* wildcard matches any channel name recursively. So /foo/</em>* matches /foo/bar, /foo/thing and /foo/bar/thing.</li>\n</ul>\n\n<p>So for example if you subscribe to /foo/* and someone sends a message to /foo/bar, you will receive that message.</p>\n\n<h2>Canceling subscriptions</h2>\n\n<p>If at some point it is no longer necessary to listen for certain messages, you can\ncancel your subscription at any time.</p>\n\n<pre><code class='javascript'>var callback = function(message) {\n    if (message.stopListening) {\n        subscription.cancel();\n    }\n    alert('Message received: '+message.text);\n};\nvar subscription = AD.Comm.Dispatch.subscribe('/message', callback);\n\nAD.Comm.Notification.publish('/message', {text: 'You will receive this', stopListening: true});\nAD.Comm.Notification.publish('/message', {text: 'But you will not receive this'});</code></pre>", "parents": ["AD.Comm"], "src": "appDev/node_modules/comm_dispatch.js", "line": 0, "children": ["AD.Comm.Dispatch.Mechanisms", "AD.Comm.Dispatch.Mechanisms", "AD.Comm.Dispatch.Mechanisms.Push", "AD.Comm.Dispatch.Mechanisms.Pull", "AD.Comm.Dispatch.Mechanisms.Chat", "AD.Comm.Dispatch.publish", "AD.Comm.Dispatch.subscribe", "AD.Comm.Dispatch.attach"]})