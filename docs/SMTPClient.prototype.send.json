c({"name": "SMTPClient.prototype.send", "params": {"data": {"description": "", "type": "", "optional": false, "order": 0, "name": "data"}, "callback": {"description": "", "type": "", "optional": false, "order": 1, "name": "callback"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>smtp.SMTPClient#send(data, callback) -> undefined\n- data (String): text to be sent to the SMTP server\n- callback (Function): callback to be used, gets params error and message</p>\n\n<p>Main method for the SMTPClient object. Sends a string to the server and\nif callback is set returns the response. If callback is not set then\nthe endline chars \\r\\n are not appended automatically</p>\n\n<p>NB! This function is Pipelining safe but you should check the support for\nit if needed (#remote_pipelining).</p>\n\n<p>Usage:</p>\n\n<pre><code>smtpclient.send(\"EHLO hostname\", function(error, message){\n    if(error){\n        console.log(\"Server responded with error \"+error.message);\n    }else{\n        console.log(\"Server responded with \"+message);\n    }\n});\n\nsmtpclient.send(\"From: andris@node.ee\\r\\nTo: andris@kreata.ee\\r\\nSubject: test\\r\\n\");\n</code></pre>\n\n<p>If there is no connection to the SMTP server, one is created automatically</p>", "src": "appDev/node_modules/mailer/node_modules/nodemailer/lib/smtp.js", "line": 256, "children": []})