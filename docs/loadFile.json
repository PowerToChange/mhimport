c({"name": "loadFile", "type": "attribute", "comment": "<p>// Not sure if we want to scan subdirectories too, if so, will need this function\nvar recursiveFileScan = function (path, listPaths, searchKey) {\n    //console.log('recursiveFileScan:' + path + ', ' + searchKey);\n    //console.log(listPaths);</p>\n\n<pre><code>// Recursively search for files that match the given \n// searchKey.  Start in the directory given in path and \n// search each sub directory.\n// All matches are added to the array listPaths.\n\nvar listFiles = fs.readdirSync(path);\nfor (var indx =0; indx &lt; listFiles.length; indx++) {\n\n    var fileName = listFiles[indx];\n\n    // if this is NOT a .xxx file\n    if (fileName.indexOf(\".\") != 0) {\n\n        var filePath =  path + '/' + fileName;\n\n        // if this is a label file,\n        if (fileName.indexOf(searchKey) &gt; -1) {\n\n            // add to listPaths \n            listPaths.push(filePath );\n\n        } else {\n\n\n            // if this is a directory\n            var stats = fs.statSync(filePath);\n            if (stats.isDirectory()) {\n\n                // scan this directory too\n                recursiveFileScan( filePath, listPaths, searchKey);\n            }\n\n        }\n\n    }\n\n}\n</code></pre>\n\n<p>};</p>", "src": "appDev/modules/appRAD/interfaces/portal/services/labels_import.js", "line": 108, "children": []})