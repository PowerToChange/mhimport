c({"name": "AD_Client.SiteDispatch", "type": "class", "comment": "<p>This is the client-side implementation of the site dispatch system and allows \ninformation to be sent from a client to the server, or between clients. </p>\n\n<h2>Usage</h2>\n\n<p>The client-side and server-side interface of the site dispatch system are virtually identical.</p>\n\n<pre><code class='javascript'>// Server-side: send a message to the client\nAD.Comm.Dispatch.publish(AD.Comm.Dispatch.Mechanisms.Push, {message: 'Hello client!'});\n\n// Client-side: receive messages from the server\nAD.Comm.Dispatch.subscribe(AD.Comm.Dispatch.Mechanisms.Push, function(data) {\n    console.log('Message received from server: ['+data.message+']');\n});</code></pre>\n\n<h2>Example</h2>\n\n<p>Here is the source code necessary to create a controller that sends and receives messages\nto the server and all other clients.</p>\n\n<pre><code class='javascript'>var $container = null;\n$.Controller(\"Messages\", {}, {\n    init: function(el, options) {\n        $container = this.element;\n\n        var $message = $container.find(\":input.message-text\");\n        $container.find(\":button.send\").click(function() {\n            // Send the message to the server and the other clients\n            sendMessage({text: $message.val()});\n            $message.val('');\n        });\n\n        var $messageList = $container.find(\".received-messages ul.message-list\");\n\n        var sendMessage = function(message) {\n            AD.Comm.Dispatch.publish(AD.Comm.Dispatch.Mechanisms.Pull, {text: message.text});\n            AD.Comm.Dispatch.publish(AD.Comm.Dispatch.Mechanisms.Chat, {text: message.text});\n        };\n\n        // Allow messages to be received from the server\n        AD.Comm.Dispatch.subscribe(AD.Comm.Dispatch.Mechanisms.Push, function(message) {\n            var $newItem = $(\"&lt;li&gt;&lt;/li&gt;\").addClass(\"from-server\").text(message.text);\n            $messageList.append($newItem);\n        });\n        // Allow messages to be received from the other clients\n        AD.Comm.Dispatch.subscribe(AD.Comm.Dispatch.Mechanisms.Chat, function(message) {\n            var $newItem = $(\"&lt;li&gt;&lt;/li&gt;\").addClass(\"from-client\").text(message.text);\n            $messageList.append($newItem);\n        });\n\n        sendMessage({text: 'New client!'});\n    }\n});</code></pre>\n\n<p>Here is the necessary HTML.</p>\n\n<pre><code class='javascript'>&lt;h1&gt;Messages&lt;/h1&gt;\n&lt;div id=\"message-controller\"&gt;\n  &lt;div class=\"received-messages\"&gt;\n    &lt;h3&gt;Received messages&lt;/h3&gt;\n    &lt;ul class=\"message-list\"&gt;&lt;/ul&gt;\n  &lt;/div&gt;\n\n  &lt;div id=\"message-send\"&gt;\n    &lt;h3&gt;Send message&lt;/h3&gt;\n    Message: &lt;input type=\"text\" class=\"message-text\" style=\"width:500px\" /&gt;&lt;input type=\"button\" class=\"send\" value=\"Send\" /&gt;\n  &lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n<p>Now, simply create the controller.</p>\n\n<pre><code class='javascript'>$('#message-controller').messages({});</code></pre>", "parents": ["AD_Client"], "src": "appDev/data/scripts/appDev/communications/siteDispatch/siteDispatch.js", "line": 0, "children": ["AD_Client.SiteDispatch.Mechanisms", "AD_Client.SiteDispatch.Mechanisms", "AD_Client.SiteDispatch.Mechanisms.Push", "AD_Client.SiteDispatch.Mechanisms.Pull", "AD_Client.SiteDispatch.Mechanisms.Chat", "AD_Client.SiteDispatch.publish", "AD_Client.SiteDispatch.subscribe"]})